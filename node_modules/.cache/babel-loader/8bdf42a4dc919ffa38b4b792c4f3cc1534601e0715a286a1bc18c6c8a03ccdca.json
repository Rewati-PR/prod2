{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node\\\\my-app\\\\src\\\\components\\\\optionsProd.jsx\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass OptionsProd extends Component {\n  constructor() {\n    super(...arguments);\n    this.handleChange = e => {\n      let {\n        currentTarget: input\n      } = e;\n      let options = {\n        ...this.props.options\n      };\n      options[input.name] = this.updateCBs(options[input.name], input.checked, +input.value);\n      this.props.onOptionChange(options);\n    };\n    this.updateCBs = (inputValue, checked, value) => {\n      let inpArr = inputValue ? inputValue.split(\",\") : [];\n      if (checked) inpArr.push(value);else {\n        let index = inpArr.findIndex(ele => ele === value);\n        if (index >= 0) inpArr.splice(index, 1);\n      }\n      return inpArr.join(\",\");\n    };\n    this.makeCheckboxes = (arr, values, name, label) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-check-label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), arr.map((opt, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          value: opt,\n          type: \"checkbox\",\n          name: name,\n          checked: values.findIndex(val => val === opt) >= 0,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          children: opt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this);\n  }\n  render() {\n    let {\n      products = \"\"\n    } = this.props.options;\n    let {\n      prod\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row border bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: this.makeCheckboxes(prod, products.split(\",\"), \"products\", \"Products\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default OptionsProd;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","OptionsProd","constructor","arguments","handleChange","e","currentTarget","input","options","props","name","updateCBs","checked","value","onOptionChange","inputValue","inpArr","split","push","index","findIndex","ele","splice","join","makeCheckboxes","arr","values","label","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","opt","type","val","onChange","render","products","prod"],"sources":["D:/Node/my-app/src/components/optionsProd.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nclass OptionsProd extends Component {\r\n  handleChange = (e) => {\r\n    let { currentTarget: input } = e;\r\n    let options = { ...this.props.options };\r\n    options[input.name] = this.updateCBs(\r\n      options[input.name],\r\n      input.checked,\r\n      +input.value\r\n    );\r\n    this.props.onOptionChange(options);\r\n};\r\nupdateCBs = (inputValue, checked, value) => {\r\n   let inpArr = inputValue ? inputValue.split(\",\") : [];\r\n    if (checked) inpArr.push(value); \r\n    else {\r\n      let index = inpArr.findIndex((ele) => ele === value);\r\n      if (index >= 0) inpArr.splice(index, 1);\r\n    }\r\n    return inpArr.join(\",\");\r\n};\r\n\r\nmakeCheckboxes = (arr, values, name, label) => (\r\n   <React.Fragment>\r\n      <label className=\"form-check-label\">{label}</label>\r\n      {arr.map((opt, index) => (\r\n        <div className=\"form-check\" key={index}>\r\n          <input\r\n            className=\"form-check-input\"\r\n            value={opt}\r\n            type=\"checkbox\"\r\n            name={name}\r\n            checked={values.findIndex((val) => val === opt) >= 0}\r\n            onChange={this.handleChange}\r\n          />\r\n          <label className=\"form-check-label\">{opt}</label>\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n\r\n    \r\n  render() {\r\n    let {products=\"\"} = this.props.options;\r\n    let { prod} = this.props;\r\n    return (\r\n      <div className=\"row border bg-light\">\r\n      <div className=\"col-12\">\r\n      {this.makeCheckboxes(\r\n            prod,\r\n            products.split(\",\"),\r\n            \"products\",\r\n            \"Products\"\r\n          )}\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\nexport default OptionsProd;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}